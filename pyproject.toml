[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "roocode-local"
version = "1.0.0"
description = "Lokal betreibbares, agentenbasiertes RooCode-Projekt fÃ¼r deterministische KI-Workflows"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "RooCode Team", email = "info@roocode.local"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.11"
dependencies = [
    "pyyaml==6.0.1",
    "click==8.1.7",
    "requests==2.31.0",
    "jinja2==3.1.2",
    "jsonschema==4.19.2",
    "python-dotenv==1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "yamllint==1.32.0",
    "ruff==0.1.6"
]
llm = [
    "transformers==4.35.2",
    "torch==2.1.1",
    "llama-cpp-python==0.2.11"
]

[project.urls]
Homepage = "https://github.com/roocode/roocode-local"
Repository = "https://github.com/roocode/roocode-local.git"
Issues = "https://github.com/roocode/roocode-local/issues"

[project.scripts]
roocode-local = "roocode_local.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["core/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"core/tests/*" = ["B011"]

[tool.yamllint]
extends = "default"
rules = {
    "line-length": {max: 120},
    "document-start": "disable",
    "truthy": {
        "allowed-values": ["true", "false", "yes", "no"]
    }
}
